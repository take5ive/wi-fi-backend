// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  address String

  @@unique([address])
}

model Token {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  address  String
  symbol   String
  name     String
  decimals Int

  chainId Int
  chain   Chain @relation(fields: [chainId], references: [chainId])

  pair0 Pair[] @relation("pair_token_0")
  pair1 Pair[] @relation("pair_token_1")

  @@unique([address, chainId])
}

model Chain {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  chainId Int
  name    String

  tokens       Token[]
  pairs        Pair[]
  pairSnapshot PairSnapshot[]

  @@unique([chainId])
}

model Pair {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  address String

  token0Symbol String
  token1Symbol String

  token0Id String
  token1Id String
  token0   Token  @relation("pair_token_0", fields: [token0Id, chainId], references: [address, chainId])
  token1   Token  @relation("pair_token_1", fields: [token1Id, chainId], references: [address, chainId])

  chainId Int
  chain   Chain @relation(fields: [chainId], references: [chainId])

  dexName      String
  dex          Dex            @relation(fields: [dexName], references: [name])
  pairSnapshot PairSnapshot[]

  @@unique([address, chainId])
}

model PairSnapshot {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  chainId Int
  chain   Chain @relation(fields: [chainId], references: [chainId])

  token0Symbol String
  token1Symbol String

  address String
  pair    Pair   @relation(fields: [address, chainId], references: [address, chainId])

  snapshotTimestamp Int

  reserveUSD Float
  volumeUSD  Float
  apr        Float
  apy        Float

  @@index([snapshotTimestamp])
}

model Dex {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  pair Pair[]

  @@unique([name])
}

model Status {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  timestamp Int

  @@unique([timestamp])
}

model Dex_ {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  chain_Id Int
  chain_   Chain_  @relation(fields: [chain_Id], references: [chain_Id])
  pair_    Pair_[]

  @@unique([name])
}

model Chain_ {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  chain_Id      Int
  name          String
  token_        Token_[]
  Dex_          Dex_[]
  TokenSnapshot TokenSnapshot[]
  Pair_Snapshot Pair_Snapshot[]
  Pair_         Pair_[]

  @@unique([chain_Id])
}

model Token_ {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  address       String
  symbol        String
  decimals_     Int
  chain_Id      Int
  chain_        Chain_          @relation(fields: [chain_Id], references: [chain_Id])
  pair_0        Pair_[]         @relation("pair__token__0")
  pair_1        Pair_[]         @relation("pair__token__1")
  TokenSnapshot TokenSnapshot[]

  @@unique([symbol])
}

model Pair_ {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  address        String
  chain_Id       Int
  chain_         Chain_  @relation(fields: [chain_Id], references: [chain_Id])
  token_0Symbol  String
  token_1Symbol  String
  token_0        Token_  @relation("pair__token__0", fields: [token_0Symbol], references: [symbol])
  token_1        Token_  @relation("pair__token__1", fields: [token_1Symbol], references: [symbol])
  dailyVolumeUSD Float
  reserveUSD     Float
  timestamp      Int
  blockNumber    Int
  apr            Float
  Dex_           Dex_?   @relation(fields: [dex_Id], references: [id])
  dex_Id         String? @db.ObjectId
}

model Pair_Snapshot {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  chain_Id       Int
  chain_         Chain_ @relation(fields: [chain_Id], references: [chain_Id])
  address        String
  token_0Symbol  String
  token_1Symbol  String
  timestamp      Int
  blockNumber    Int
  reserveUSD     Float
  dailyVolumeUSD Float
  apr            Float
}

model Status_ {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  timestamp             Int
  blockNumber_uniswap   Int
  timestamp_pancakeswap Int
  timestamp_uniswap     Int
  timestamp_bifswap     Int
  timestamp_quickswap   Int
  token_Timestamp       Int
  status_               Int

  @@unique([status_])
}

model TokenSnapshot {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  chain_Id Int
  chain_   Chain_ @relation(fields: [chain_Id], references: [chain_Id])

  address String
  symbol  String
  token_  Token_ @relation(fields: [symbol], references: [symbol])

  timestamp      Int
  priceUSD       Float
  usd_market_cap Float
  dailyVolumeUSD Float
  daily_change   Float
}
